draw_ball:
    push ax
    push bx
    push cx
    push dx
    push di
    push si

    mov bx, 1
    xor cx, cx
    mov cl, byte [ball_radius]
    sub bx, cx ; f = 1-radius
    mov si, 1 ; wtfX
    mov al, -2
    imul cl ; -2*radius
    mov di, ax ; wtfY
    mov cx, 0 ; X
    xor dx, dx
    mov dl, byte [ball_radius] ; Y

    ;four initial dots
    push word [ball_pos] ; X0
    mov ax, word [ball_pos+2] ;Y0
    add ax, [ball_radius]
    push ax
    push word [ball_color]
    call draw_pixel

    push word [ball_pos] ; X0
    mov ax, word [ball_pos+2] ;Y0
    sub ax, [ball_radius]
    push ax
    push word [ball_color]
    call draw_pixel

    mov ax, word [ball_pos] ;X0
    add ax, [ball_radius]
    push ax
    mov ax, word [ball_pos] ;X1
    sub ax, [ball_radius]
    push ax
    push word [ball_pos+2] ; Y0
    push word [ball_color]
    call draw_line

    ;while (x < y)
    _while_x_lt_y:
        ;if (f >= 0)
        cmp bx, 0
        jl _while_ok
            dec dx ; y--
            add di, 2 ; wtfY += 2
            add bx, di ; f += wtfY
        _while_ok:
        inc cx ; x++
        add si, 2 ; wtfX += 2
        add bx, si ; f += wtfX

        ; 8 draws
        mov ax, word [ball_pos] ;X0
        add ax, cx
        push ax
        mov ax, word [ball_pos] ;X1
        sub ax, cx
        push ax
        mov ax, word [ball_pos+2] ;Y0
        add ax, dx
        push ax
        push word [ball_color]
        call draw_line



        mov ax, word [ball_pos] ;X0
        add ax, cx
        push ax
        mov ax, word [ball_pos] ;X1
        sub ax, cx
        push ax
        mov ax, word [ball_pos+2] ;Y0
        sub ax, dx
        push ax
        push word [ball_color]
        call draw_line



        mov ax, word [ball_pos] ;X0
        add ax, dx
        push ax
        mov ax, word [ball_pos] ;X1
        sub ax, dx
        push ax
        mov ax, word [ball_pos+2] ;Y0
        add ax, cx
        push ax
        push word [ball_color]
        call draw_line


        mov ax, word [ball_pos] ;X0
        add ax, dx
        push ax
        mov ax, word [ball_pos] ;X1
        sub ax, dx
        push ax
        mov ax, word [ball_pos+2] ;Y0
        sub ax, cx
        push ax
        push word [ball_color]
        call draw_line


        ; finally...
        cmp cx, dx
        jl _while_x_lt_y

    pop si
    pop di
    pop dx
    pop cx
    pop bx
    pop ax

    ret
